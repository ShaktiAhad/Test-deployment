pipeline {
    agent {
      node {
        label 'master'
      }
    }
    environment {
        DEV_PROJECT = "python-app"
        APP_NAME_DEV = "python-hello-dev"
        APP_NAME_PROD = "python-hello-prod"
        APP_GIT_URL = "https://github.com/ShaktiAhad/Test-deployment.git"
        CONTEXT_DIR = "test2"
    }
    stages {
        stage('Launch new app in DEV env') {
                steps {
                    sh '''   
                        oc project ${DEV_PROJECT}
                        sleep 5
                    '''
                }
            }
        stage('start a new build or create a new app') {
            steps {
                script{
                    openshift.withCluster() {
                        openshift.withProject( "${DEV_PROJECT}" ) {
                            script {
                                def bc = openshift.selector("bc", "${APP_NAME_DEV}")
                                if (bc.exists()) {
                                    sh '''
                                        oc project ${DEV_PROJECT}
                                        oc start-build ${APP_NAME_DEV}
    
                                    '''
                                } else {
                                    sh '''
                                        oc new-app --name ${APP_NAME_DEV} python:latest ${APP_GIT_URL} --context-dir ${CONTEXT_DIR}
                                        oc expose svc/${APP_NAME_DEV}
                                    '''
                            }
                        }
                    }
                }
            }
        }
        }


        stage('Wait for deployment in Dev') {
                steps {
                    script {
                        openshift.withCluster() {
                            openshift.withProject( "${DEV_PROJECT}" ) {
                                def bc = openshift.selector("bc", "${APP_NAME_DEV}")
                                bc.logs('-f')
                                def builds = bc.related('builds')
                                builds.untilEach(1) {
                                    return (it.object().status.phase == "Complete")
                                }
                            }
                            echo "Deployment to Dev env is completed."
                        }
                    }
                }
            }

        stage('Promote to Prod Env') {
            steps {
                timeout(time: 60, unit: 'MINUTES') {
                    input message: "Promote to Staging?"
                }
                script {
                    openshift.withCluster() {
                    openshift.tag("${DEV_PROJECT}/${APP_NAME_DEV}:latest", "${DEV_PROJECT}/${APP_NAME_PROD}:latest")
                    }
                }
            }
        }

        stage('Wait for deployment in Prod') {
            steps {
                script {
                    openshift.withCluster() {
                        openshift.withProject( "${DEV_PROJECT}" ) {
                           script{
                               echo '### Cleaning existing resources in Prod ###'
                               sh '''
                                    oc project ${DEV_PROJECT}
                                    oc delete all -l app=${APP_NAME_PROD}
                                    sleep 5
                               '''

                               echo '### Creating a new app in Prod ###'
                               sh '''
                                    oc new-app --name ${APP_NAME_PROD} -i ${APP_NAME_PROD}:latest
                                    oc expose svc/${APP_NAME_PROD}
                               '''
                           }
                        }
                        echo "Deployment to Prod env is complete."
                    }
                }
            }
        }    
    }
}
